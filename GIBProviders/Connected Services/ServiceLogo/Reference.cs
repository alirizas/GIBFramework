//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GIBProviders.ServiceLogo {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginType", Namespace="http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    [System.SerializableAttribute()]
    public partial class LoginType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string appStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string versionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string appStr {
            get {
                return this.appStrField;
            }
            set {
                if ((object.ReferenceEquals(this.appStrField, value) != true)) {
                    this.appStrField = value;
                    this.RaisePropertyChanged("appStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string passWord {
            get {
                return this.passWordField;
            }
            set {
                if ((object.ReferenceEquals(this.passWordField, value) != true)) {
                    this.passWordField = value;
                    this.RaisePropertyChanged("passWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string source {
            get {
                return this.sourceField;
            }
            set {
                if ((object.ReferenceEquals(this.sourceField, value) != true)) {
                    this.sourceField = value;
                    this.RaisePropertyChanged("source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                if ((object.ReferenceEquals(this.versionField, value) != true)) {
                    this.versionField = value;
                    this.RaisePropertyChanged("version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentType", Namespace="http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    [System.SerializableAttribute()]
    public partial class DocumentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GIBProviders.ServiceLogo.base64BinaryData binaryDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime currentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hashField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GIBProviders.ServiceLogo.base64BinaryData binaryData {
            get {
                return this.binaryDataField;
            }
            set {
                if ((object.ReferenceEquals(this.binaryDataField, value) != true)) {
                    this.binaryDataField = value;
                    this.RaisePropertyChanged("binaryData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime currentDate {
            get {
                return this.currentDateField;
            }
            set {
                if ((this.currentDateField.Equals(value) != true)) {
                    this.currentDateField = value;
                    this.RaisePropertyChanged("currentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fileNameField, value) != true)) {
                    this.fileNameField = value;
                    this.RaisePropertyChanged("fileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hash {
            get {
                return this.hashField;
            }
            set {
                if ((object.ReferenceEquals(this.hashField, value) != true)) {
                    this.hashField = value;
                    this.RaisePropertyChanged("hash");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="base64BinaryData", Namespace="http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    [System.SerializableAttribute()]
    public partial class base64BinaryData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contentTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contentType {
            get {
                return this.contentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.contentTypeField, value) != true)) {
                    this.contentTypeField = value;
                    this.RaisePropertyChanged("contentType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EArchiveDocumentTypes", Namespace="http://schemas.datacontract.org/2004/07/eFaturaCoreLib.Common")]
    public enum EArchiveDocumentTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVOICE = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REPORT = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElementType", Namespace="http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    [System.SerializableAttribute()]
    public partial class ElementType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GIBProviders.ServiceLogo.base64BinaryData binaryDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime currentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string envelopeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string gbLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pkLabelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GIBProviders.ServiceLogo.base64BinaryData binaryData {
            get {
                return this.binaryDataField;
            }
            set {
                if ((object.ReferenceEquals(this.binaryDataField, value) != true)) {
                    this.binaryDataField = value;
                    this.RaisePropertyChanged("binaryData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime currentDate {
            get {
                return this.currentDateField;
            }
            set {
                if ((this.currentDateField.Equals(value) != true)) {
                    this.currentDateField = value;
                    this.RaisePropertyChanged("currentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string envelopeId {
            get {
                return this.envelopeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.envelopeIdField, value) != true)) {
                    this.envelopeIdField = value;
                    this.RaisePropertyChanged("envelopeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fileNameField, value) != true)) {
                    this.fileNameField = value;
                    this.RaisePropertyChanged("fileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gbLabel {
            get {
                return this.gbLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.gbLabelField, value) != true)) {
                    this.gbLabelField = value;
                    this.RaisePropertyChanged("gbLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hash {
            get {
                return this.hashField;
            }
            set {
                if ((object.ReferenceEquals(this.hashField, value) != true)) {
                    this.hashField = value;
                    this.RaisePropertyChanged("hash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pkLabel {
            get {
                return this.pkLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.pkLabelField, value) != true)) {
                    this.pkLabelField = value;
                    this.RaisePropertyChanged("pkLabel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceStatus", Namespace="http://schemas.datacontract.org/2004/07/CommonLib.Helpers")]
    public enum InvoiceStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TEMP = -99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PUSHQUEUEERROR = -11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUSPEND = -5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DELETED = -4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAIL = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RAW = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PROCESSSED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNED = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ENVELOPED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXTRACTED = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNRECEIVED = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RECEIVED = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppRespStatus", Namespace="http://schemas.datacontract.org/2004/07/eFaturaCoreLib.Common")]
    public enum AppRespStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TEMP = -99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PUSHQUEUEERROR = -11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUSPEND = -5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DELETED = -4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAIL = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RAW = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PROCESSSED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNED = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ENVELOPED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXTRACTED = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNRECEIVED = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RECEIVED = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendRecvType", Namespace="http://schemas.datacontract.org/2004/07/CommonLib")]
    public enum SendRecvType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEND = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RECV = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostBoxDateType", Namespace="http://schemas.datacontract.org/2004/07/eFaturaCoreLib.Common")]
    public enum PostBoxDateType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        byCREATED = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        byENVELOPEDATE = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        byCURRENTDATE = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceDateType", Namespace="http://schemas.datacontract.org/2004/07/eFaturaCoreLib.Common")]
    public enum InvoiceDateType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        byCREATED = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        byISSUEDATE = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserListType", Namespace="http://schemas.datacontract.org/2004/07/CommonLib")]
    public enum UserListType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GBLIST = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PKLIST = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LIST4760 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LIST5015 = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDocumentType", Namespace="http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    public enum GetDocumentType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EINVOICE = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EARCHIVE = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APPLICATIONRESPONSE = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentDataType", Namespace="http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    public enum DocumentDataType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UBL = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDF = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReconInvoiceType", Namespace="http://schemas.datacontract.org/2004/07/CommonLib")]
    [System.SerializableAttribute()]
    public partial class ReconInvoiceType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CancelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<GIBProviders.ServiceLogo.EArchiveInvoiceStatusForRecon> InvoiceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Cancel {
            get {
                return this.CancelField;
            }
            set {
                if ((this.CancelField.Equals(value) != true)) {
                    this.CancelField = value;
                    this.RaisePropertyChanged("Cancel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumber {
            get {
                return this.InvoiceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumberField, value) != true)) {
                    this.InvoiceNumberField = value;
                    this.RaisePropertyChanged("InvoiceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<GIBProviders.ServiceLogo.EArchiveInvoiceStatusForRecon> InvoiceStatus {
            get {
                return this.InvoiceStatusField;
            }
            set {
                if ((this.InvoiceStatusField.Equals(value) != true)) {
                    this.InvoiceStatusField = value;
                    this.RaisePropertyChanged("InvoiceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uuid {
            get {
                return this.UuidField;
            }
            set {
                if ((object.ReferenceEquals(this.UuidField, value) != true)) {
                    this.UuidField = value;
                    this.RaisePropertyChanged("Uuid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EArchiveInvoiceStatusForRecon", Namespace="http://schemas.datacontract.org/2004/07/CommonLib")]
    public enum EArchiveInvoiceStatusForRecon : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUCCESS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAULT = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QUEUE = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceType", Namespace="http://schemas.datacontract.org/2004/07/CommonLib")]
    public enum InvoiceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EINVOICE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EARCHIVE = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eFaturaWebService.ResultType", Namespace="http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    [System.SerializableAttribute()]
    public partial class eFaturaWebServiceResultType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] outputListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int resultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string resultMsgField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] outputList {
            get {
                return this.outputListField;
            }
            set {
                if ((object.ReferenceEquals(this.outputListField, value) != true)) {
                    this.outputListField = value;
                    this.RaisePropertyChanged("outputList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                if ((this.resultCodeField.Equals(value) != true)) {
                    this.resultCodeField = value;
                    this.RaisePropertyChanged("resultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string resultMsg {
            get {
                return this.resultMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.resultMsgField, value) != true)) {
                    this.resultMsgField = value;
                    this.RaisePropertyChanged("resultMsg");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentStatusType", Namespace="http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    [System.SerializableAttribute()]
    public partial class DocumentStatusType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime currentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string envelopeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isCancelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int code {
            get {
                return this.codeField;
            }
            set {
                if ((this.codeField.Equals(value) != true)) {
                    this.codeField = value;
                    this.RaisePropertyChanged("code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime currentDate {
            get {
                return this.currentDateField;
            }
            set {
                if ((this.currentDateField.Equals(value) != true)) {
                    this.currentDateField = value;
                    this.RaisePropertyChanged("currentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string envelopeId {
            get {
                return this.envelopeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.envelopeIdField, value) != true)) {
                    this.envelopeIdField = value;
                    this.RaisePropertyChanged("envelopeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isCancel {
            get {
                return this.isCancelField;
            }
            set {
                if ((this.isCancelField.Equals(value) != true)) {
                    this.isCancelField = value;
                    this.RaisePropertyChanged("isCancel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Document", Namespace="http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    [System.SerializableAttribute()]
    public partial class Document : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] docInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentJSonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentUuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] docInfo {
            get {
                return this.docInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.docInfoField, value) != true)) {
                    this.docInfoField = value;
                    this.RaisePropertyChanged("docInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentId {
            get {
                return this.documentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.documentIdField, value) != true)) {
                    this.documentIdField = value;
                    this.RaisePropertyChanged("documentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentJSon {
            get {
                return this.documentJSonField;
            }
            set {
                if ((object.ReferenceEquals(this.documentJSonField, value) != true)) {
                    this.documentJSonField = value;
                    this.RaisePropertyChanged("documentJSon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentUuid {
            get {
                return this.documentUuidField;
            }
            set {
                if ((object.ReferenceEquals(this.documentUuidField, value) != true)) {
                    this.documentUuidField = value;
                    this.RaisePropertyChanged("documentUuid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceLogo.IPostBoxService")]
    public interface IPostBoxService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/Ping", ReplyAction="http://tempuri.org/IPostBoxService/PingResponse")]
        string Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/Ping", ReplyAction="http://tempuri.org/IPostBoxService/PingResponse")]
        System.Threading.Tasks.Task<string> PingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/ALive", ReplyAction="http://tempuri.org/IPostBoxService/ALiveResponse")]
        string ALive(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/ALive", ReplyAction="http://tempuri.org/IPostBoxService/ALiveResponse")]
        System.Threading.Tasks.Task<string> ALiveAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/Login", ReplyAction="http://tempuri.org/IPostBoxService/LoginResponse")]
        GIBProviders.ServiceLogo.LoginResponse Login(GIBProviders.ServiceLogo.LoginRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/Login", ReplyAction="http://tempuri.org/IPostBoxService/LoginResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.LoginResponse> LoginAsync(GIBProviders.ServiceLogo.LoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/Logout", ReplyAction="http://tempuri.org/IPostBoxService/LogoutResponse")]
        void Logout(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/Logout", ReplyAction="http://tempuri.org/IPostBoxService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendEnvelope", ReplyAction="http://tempuri.org/IPostBoxService/sendEnvelopeResponse")]
        bool sendEnvelope(GIBProviders.ServiceLogo.DocumentType envelope, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendEnvelope", ReplyAction="http://tempuri.org/IPostBoxService/sendEnvelopeResponse")]
        System.Threading.Tasks.Task<bool> sendEnvelopeAsync(GIBProviders.ServiceLogo.DocumentType envelope, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendInvoice", ReplyAction="http://tempuri.org/IPostBoxService/sendInvoiceResponse")]
        bool sendInvoice(GIBProviders.ServiceLogo.DocumentType invoice, string alias, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendInvoice", ReplyAction="http://tempuri.org/IPostBoxService/sendInvoiceResponse")]
        System.Threading.Tasks.Task<bool> sendInvoiceAsync(GIBProviders.ServiceLogo.DocumentType invoice, string alias, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendApplicationResponse", ReplyAction="http://tempuri.org/IPostBoxService/sendApplicationResponseResponse")]
        bool sendApplicationResponse(GIBProviders.ServiceLogo.DocumentType appResp, string alias, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendApplicationResponse", ReplyAction="http://tempuri.org/IPostBoxService/sendApplicationResponseResponse")]
        System.Threading.Tasks.Task<bool> sendApplicationResponseAsync(GIBProviders.ServiceLogo.DocumentType appResp, string alias, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendEnvelopeEx", ReplyAction="http://tempuri.org/IPostBoxService/sendEnvelopeExResponse")]
        int sendEnvelopeEx(GIBProviders.ServiceLogo.DocumentType envelope, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendEnvelopeEx", ReplyAction="http://tempuri.org/IPostBoxService/sendEnvelopeExResponse")]
        System.Threading.Tasks.Task<int> sendEnvelopeExAsync(GIBProviders.ServiceLogo.DocumentType envelope, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendInvoiceEx", ReplyAction="http://tempuri.org/IPostBoxService/sendInvoiceExResponse")]
        int sendInvoiceEx(GIBProviders.ServiceLogo.DocumentType invoice, string alias, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendInvoiceEx", ReplyAction="http://tempuri.org/IPostBoxService/sendInvoiceExResponse")]
        System.Threading.Tasks.Task<int> sendInvoiceExAsync(GIBProviders.ServiceLogo.DocumentType invoice, string alias, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendSignedInvoice", ReplyAction="http://tempuri.org/IPostBoxService/sendSignedInvoiceResponse")]
        int sendSignedInvoice(GIBProviders.ServiceLogo.DocumentType invoice, string alias, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendSignedInvoice", ReplyAction="http://tempuri.org/IPostBoxService/sendSignedInvoiceResponse")]
        System.Threading.Tasks.Task<int> sendSignedInvoiceAsync(GIBProviders.ServiceLogo.DocumentType invoice, string alias, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendApplicationResponseEx", ReplyAction="http://tempuri.org/IPostBoxService/sendApplicationResponseExResponse")]
        int sendApplicationResponseEx(GIBProviders.ServiceLogo.DocumentType appResp, string alias, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendApplicationResponseEx", ReplyAction="http://tempuri.org/IPostBoxService/sendApplicationResponseExResponse")]
        System.Threading.Tasks.Task<int> sendApplicationResponseExAsync(GIBProviders.ServiceLogo.DocumentType appResp, string alias, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendEArchiveDocument", ReplyAction="http://tempuri.org/IPostBoxService/sendEArchiveDocumentResponse")]
        int sendEArchiveDocument(GIBProviders.ServiceLogo.DocumentType document, GIBProviders.ServiceLogo.EArchiveDocumentTypes docType, bool isSigned, string sessionID, string xsltUuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendEArchiveDocument", ReplyAction="http://tempuri.org/IPostBoxService/sendEArchiveDocumentResponse")]
        System.Threading.Tasks.Task<int> sendEArchiveDocumentAsync(GIBProviders.ServiceLogo.DocumentType document, GIBProviders.ServiceLogo.EArchiveDocumentTypes docType, bool isSigned, string sessionID, string xsltUuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/receiveDocument", ReplyAction="http://tempuri.org/IPostBoxService/receiveDocumentResponse")]
        GIBProviders.ServiceLogo.receiveDocumentResponse receiveDocument(GIBProviders.ServiceLogo.receiveDocumentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/receiveDocument", ReplyAction="http://tempuri.org/IPostBoxService/receiveDocumentResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.receiveDocumentResponse> receiveDocumentAsync(GIBProviders.ServiceLogo.receiveDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/receiveDone", ReplyAction="http://tempuri.org/IPostBoxService/receiveDoneResponse")]
        int receiveDone(string fileID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/receiveDone", ReplyAction="http://tempuri.org/IPostBoxService/receiveDoneResponse")]
        System.Threading.Tasks.Task<int> receiveDoneAsync(string fileID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/receiveInvoice", ReplyAction="http://tempuri.org/IPostBoxService/receiveInvoiceResponse")]
        GIBProviders.ServiceLogo.receiveInvoiceResponse receiveInvoice(GIBProviders.ServiceLogo.receiveInvoiceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/receiveInvoice", ReplyAction="http://tempuri.org/IPostBoxService/receiveInvoiceResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.receiveInvoiceResponse> receiveInvoiceAsync(GIBProviders.ServiceLogo.receiveInvoiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/receiveInvoiceDone", ReplyAction="http://tempuri.org/IPostBoxService/receiveInvoiceDoneResponse")]
        int receiveInvoiceDone(string uuid, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/receiveInvoiceDone", ReplyAction="http://tempuri.org/IPostBoxService/receiveInvoiceDoneResponse")]
        System.Threading.Tasks.Task<int> receiveInvoiceDoneAsync(string uuid, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/receiveApplicationResponse", ReplyAction="http://tempuri.org/IPostBoxService/receiveApplicationResponseResponse")]
        GIBProviders.ServiceLogo.receiveApplicationResponseResponse receiveApplicationResponse(GIBProviders.ServiceLogo.receiveApplicationResponseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/receiveApplicationResponse", ReplyAction="http://tempuri.org/IPostBoxService/receiveApplicationResponseResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.receiveApplicationResponseResponse> receiveApplicationResponseAsync(GIBProviders.ServiceLogo.receiveApplicationResponseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/receiveApplicationResponseDone", ReplyAction="http://tempuri.org/IPostBoxService/receiveApplicationResponseDoneResponse")]
        int receiveApplicationResponseDone(string uuid, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/receiveApplicationResponseDone", ReplyAction="http://tempuri.org/IPostBoxService/receiveApplicationResponseDoneResponse")]
        System.Threading.Tasks.Task<int> receiveApplicationResponseDoneAsync(string uuid, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getApplicationResponse", ReplyAction="http://tempuri.org/IPostBoxService/getApplicationResponseResponse")]
        GIBProviders.ServiceLogo.getApplicationResponseResponse getApplicationResponse(GIBProviders.ServiceLogo.getApplicationResponseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getApplicationResponse", ReplyAction="http://tempuri.org/IPostBoxService/getApplicationResponseResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getApplicationResponseResponse> getApplicationResponseAsync(GIBProviders.ServiceLogo.getApplicationResponseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getInvoiceStatus", ReplyAction="http://tempuri.org/IPostBoxService/getInvoiceStatusResponse")]
        GIBProviders.ServiceLogo.getInvoiceStatusResponse getInvoiceStatus(GIBProviders.ServiceLogo.getInvoiceStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getInvoiceStatus", ReplyAction="http://tempuri.org/IPostBoxService/getInvoiceStatusResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getInvoiceStatusResponse> getInvoiceStatusAsync(GIBProviders.ServiceLogo.getInvoiceStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getAppRespStatus", ReplyAction="http://tempuri.org/IPostBoxService/getAppRespStatusResponse")]
        GIBProviders.ServiceLogo.getAppRespStatusResponse getAppRespStatus(GIBProviders.ServiceLogo.getAppRespStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getAppRespStatus", ReplyAction="http://tempuri.org/IPostBoxService/getAppRespStatusResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getAppRespStatusResponse> getAppRespStatusAsync(GIBProviders.ServiceLogo.getAppRespStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getEnvelopeList", ReplyAction="http://tempuri.org/IPostBoxService/getEnvelopeListResponse")]
        string[] getEnvelopeList(System.DateTime beginDate, System.DateTime endDate, GIBProviders.ServiceLogo.SendRecvType opType, string sessionID, GIBProviders.ServiceLogo.PostBoxDateType dateBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getEnvelopeList", ReplyAction="http://tempuri.org/IPostBoxService/getEnvelopeListResponse")]
        System.Threading.Tasks.Task<string[]> getEnvelopeListAsync(System.DateTime beginDate, System.DateTime endDate, GIBProviders.ServiceLogo.SendRecvType opType, string sessionID, GIBProviders.ServiceLogo.PostBoxDateType dateBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getEnvelope", ReplyAction="http://tempuri.org/IPostBoxService/getEnvelopeResponse")]
        GIBProviders.ServiceLogo.DocumentType getEnvelope(string envelopeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getEnvelope", ReplyAction="http://tempuri.org/IPostBoxService/getEnvelopeResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.DocumentType> getEnvelopeAsync(string envelopeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getInvoiceList", ReplyAction="http://tempuri.org/IPostBoxService/getInvoiceListResponse")]
        string[] getInvoiceList(System.DateTime beginDate, System.DateTime endDate, GIBProviders.ServiceLogo.SendRecvType opType, string sessionID, GIBProviders.ServiceLogo.InvoiceDateType dateBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getInvoiceList", ReplyAction="http://tempuri.org/IPostBoxService/getInvoiceListResponse")]
        System.Threading.Tasks.Task<string[]> getInvoiceListAsync(System.DateTime beginDate, System.DateTime endDate, GIBProviders.ServiceLogo.SendRecvType opType, string sessionID, GIBProviders.ServiceLogo.InvoiceDateType dateBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getInvoice", ReplyAction="http://tempuri.org/IPostBoxService/getInvoiceResponse")]
        GIBProviders.ServiceLogo.DocumentType getInvoice(string invoiceID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getInvoice", ReplyAction="http://tempuri.org/IPostBoxService/getInvoiceResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.DocumentType> getInvoiceAsync(string invoiceID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getUserList", ReplyAction="http://tempuri.org/IPostBoxService/getUserListResponse")]
        GIBProviders.ServiceLogo.DocumentType getUserList(GIBProviders.ServiceLogo.LoginType login, GIBProviders.ServiceLogo.UserListType listType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getUserList", ReplyAction="http://tempuri.org/IPostBoxService/getUserListResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.DocumentType> getUserListAsync(GIBProviders.ServiceLogo.LoginType login, GIBProviders.ServiceLogo.UserListType listType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getUserListNew", ReplyAction="http://tempuri.org/IPostBoxService/getUserListNewResponse")]
        GIBProviders.ServiceLogo.DocumentType getUserListNew(GIBProviders.ServiceLogo.LoginType login, GIBProviders.ServiceLogo.UserListType listType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getUserListNew", ReplyAction="http://tempuri.org/IPostBoxService/getUserListNewResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.DocumentType> getUserListNewAsync(GIBProviders.ServiceLogo.LoginType login, GIBProviders.ServiceLogo.UserListType listType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getApprovalFlowList", ReplyAction="http://tempuri.org/IPostBoxService/getApprovalFlowListResponse")]
        GIBProviders.ServiceLogo.getApprovalFlowListResponse getApprovalFlowList(GIBProviders.ServiceLogo.getApprovalFlowListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getApprovalFlowList", ReplyAction="http://tempuri.org/IPostBoxService/getApprovalFlowListResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getApprovalFlowListResponse> getApprovalFlowListAsync(GIBProviders.ServiceLogo.getApprovalFlowListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/setApprovalFlowId", ReplyAction="http://tempuri.org/IPostBoxService/setApprovalFlowIdResponse")]
        bool setApprovalFlowId(string invoiceUuid, int flowId, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/setApprovalFlowId", ReplyAction="http://tempuri.org/IPostBoxService/setApprovalFlowIdResponse")]
        System.Threading.Tasks.Task<bool> setApprovalFlowIdAsync(string invoiceUuid, int flowId, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getApprovalFlowRes", ReplyAction="http://tempuri.org/IPostBoxService/getApprovalFlowResResponse")]
        GIBProviders.ServiceLogo.getApprovalFlowResResponse getApprovalFlowRes(GIBProviders.ServiceLogo.getApprovalFlowResRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getApprovalFlowRes", ReplyAction="http://tempuri.org/IPostBoxService/getApprovalFlowResResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getApprovalFlowResResponse> getApprovalFlowResAsync(GIBProviders.ServiceLogo.getApprovalFlowResRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getDocumentStatus", ReplyAction="http://tempuri.org/IPostBoxService/getDocumentStatusResponse")]
        GIBProviders.ServiceLogo.getDocumentStatusResponse getDocumentStatus(GIBProviders.ServiceLogo.getDocumentStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getDocumentStatus", ReplyAction="http://tempuri.org/IPostBoxService/getDocumentStatusResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getDocumentStatusResponse> getDocumentStatusAsync(GIBProviders.ServiceLogo.getDocumentStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getDocumentStatusEx", ReplyAction="http://tempuri.org/IPostBoxService/getDocumentStatusExResponse")]
        GIBProviders.ServiceLogo.getDocumentStatusExResponse getDocumentStatusEx(GIBProviders.ServiceLogo.getDocumentStatusExRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getDocumentStatusEx", ReplyAction="http://tempuri.org/IPostBoxService/getDocumentStatusExResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getDocumentStatusExResponse> getDocumentStatusExAsync(GIBProviders.ServiceLogo.getDocumentStatusExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getEArchiveXslt", ReplyAction="http://tempuri.org/IPostBoxService/getEArchiveXsltResponse")]
        GIBProviders.ServiceLogo.getEArchiveXsltResponse getEArchiveXslt(GIBProviders.ServiceLogo.getEArchiveXsltRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getEArchiveXslt", ReplyAction="http://tempuri.org/IPostBoxService/getEArchiveXsltResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getEArchiveXsltResponse> getEArchiveXsltAsync(GIBProviders.ServiceLogo.getEArchiveXsltRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getInvoiceApplicationResponse", ReplyAction="http://tempuri.org/IPostBoxService/getInvoiceApplicationResponseResponse")]
        int getInvoiceApplicationResponse(string sessionID, string uuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getInvoiceApplicationResponse", ReplyAction="http://tempuri.org/IPostBoxService/getInvoiceApplicationResponseResponse")]
        System.Threading.Tasks.Task<int> getInvoiceApplicationResponseAsync(string sessionID, string uuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getInvoiceResponseData", ReplyAction="http://tempuri.org/IPostBoxService/getInvoiceResponseDataResponse")]
        GIBProviders.ServiceLogo.getInvoiceResponseDataResponse getInvoiceResponseData(GIBProviders.ServiceLogo.getInvoiceResponseDataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getInvoiceResponseData", ReplyAction="http://tempuri.org/IPostBoxService/getInvoiceResponseDataResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getInvoiceResponseDataResponse> getInvoiceResponseDataAsync(GIBProviders.ServiceLogo.getInvoiceResponseDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/setApplicationResponseOption", ReplyAction="http://tempuri.org/IPostBoxService/setApplicationResponseOptionResponse")]
        bool setApplicationResponseOption(string sessionID, int option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/setApplicationResponseOption", ReplyAction="http://tempuri.org/IPostBoxService/setApplicationResponseOptionResponse")]
        System.Threading.Tasks.Task<bool> setApplicationResponseOptionAsync(string sessionID, int option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getEArchiveInvoicePdfData", ReplyAction="http://tempuri.org/IPostBoxService/getEArchiveInvoicePdfDataResponse")]
        GIBProviders.ServiceLogo.getEArchiveInvoicePdfDataResponse getEArchiveInvoicePdfData(GIBProviders.ServiceLogo.getEArchiveInvoicePdfDataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getEArchiveInvoicePdfData", ReplyAction="http://tempuri.org/IPostBoxService/getEArchiveInvoicePdfDataResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getEArchiveInvoicePdfDataResponse> getEArchiveInvoicePdfDataAsync(GIBProviders.ServiceLogo.getEArchiveInvoicePdfDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getDocumentData", ReplyAction="http://tempuri.org/IPostBoxService/getDocumentDataResponse")]
        GIBProviders.ServiceLogo.DocumentType getDocumentData(string sessionID, string uuid, GIBProviders.ServiceLogo.GetDocumentType docType, GIBProviders.ServiceLogo.DocumentDataType dataType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getDocumentData", ReplyAction="http://tempuri.org/IPostBoxService/getDocumentDataResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.DocumentType> getDocumentDataAsync(string sessionID, string uuid, GIBProviders.ServiceLogo.GetDocumentType docType, GIBProviders.ServiceLogo.DocumentDataType dataType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getReconciliationList", ReplyAction="http://tempuri.org/IPostBoxService/getReconciliationListResponse")]
        GIBProviders.ServiceLogo.DocumentType getReconciliationList(string sessionID, System.DateTime begDate, System.DateTime endDate, string begNum, string endNum, GIBProviders.ServiceLogo.SendRecvType opType, int docType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/getReconciliationList", ReplyAction="http://tempuri.org/IPostBoxService/getReconciliationListResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.DocumentType> getReconciliationListAsync(string sessionID, System.DateTime begDate, System.DateTime endDate, string begNum, string endNum, GIBProviders.ServiceLogo.SendRecvType opType, int docType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendReconciliationReport", ReplyAction="http://tempuri.org/IPostBoxService/sendReconciliationReportResponse")]
        int sendReconciliationReport(GIBProviders.ServiceLogo.DocumentType report, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/sendReconciliationReport", ReplyAction="http://tempuri.org/IPostBoxService/sendReconciliationReportResponse")]
        System.Threading.Tasks.Task<int> sendReconciliationReportAsync(GIBProviders.ServiceLogo.DocumentType report, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/createElementId", ReplyAction="http://tempuri.org/IPostBoxService/createElementIdResponse")]
        string createElementId(string sessionID, string year, string invoicePrefix, GIBProviders.ServiceLogo.GetDocumentType docType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/createElementId", ReplyAction="http://tempuri.org/IPostBoxService/createElementIdResponse")]
        System.Threading.Tasks.Task<string> createElementIdAsync(string sessionID, string year, string invoicePrefix, GIBProviders.ServiceLogo.GetDocumentType docType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/cancelEArchiveInvoice", ReplyAction="http://tempuri.org/IPostBoxService/cancelEArchiveInvoiceResponse")]
        int cancelEArchiveInvoice(string sessionID, string uuid, string elementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/cancelEArchiveInvoice", ReplyAction="http://tempuri.org/IPostBoxService/cancelEArchiveInvoiceResponse")]
        System.Threading.Tasks.Task<int> cancelEArchiveInvoiceAsync(string sessionID, string uuid, string elementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/SendEArchiveListForReconcilition", ReplyAction="http://tempuri.org/IPostBoxService/SendEArchiveListForReconcilitionResponse")]
        int SendEArchiveListForReconcilition(System.DateTime beginDate, System.DateTime endDate, string sessionID, GIBProviders.ServiceLogo.ReconInvoiceType[] invoiceList, GIBProviders.ServiceLogo.InvoiceType invoiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/SendEArchiveListForReconcilition", ReplyAction="http://tempuri.org/IPostBoxService/SendEArchiveListForReconcilitionResponse")]
        System.Threading.Tasks.Task<int> SendEArchiveListForReconcilitionAsync(System.DateTime beginDate, System.DateTime endDate, string sessionID, GIBProviders.ServiceLogo.ReconInvoiceType[] invoiceList, GIBProviders.ServiceLogo.InvoiceType invoiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/SendDocument", ReplyAction="http://tempuri.org/IPostBoxService/SendDocumentResponse")]
        GIBProviders.ServiceLogo.SendDocumentResponse SendDocument(GIBProviders.ServiceLogo.SendDocumentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/SendDocument", ReplyAction="http://tempuri.org/IPostBoxService/SendDocumentResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.SendDocumentResponse> SendDocumentAsync(GIBProviders.ServiceLogo.SendDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/GetDocument", ReplyAction="http://tempuri.org/IPostBoxService/GetDocumentResponse")]
        GIBProviders.ServiceLogo.GetDocumentResponse GetDocument(GIBProviders.ServiceLogo.GetDocumentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/GetDocument", ReplyAction="http://tempuri.org/IPostBoxService/GetDocumentResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.GetDocumentResponse> GetDocumentAsync(GIBProviders.ServiceLogo.GetDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/GetDocumentDone", ReplyAction="http://tempuri.org/IPostBoxService/GetDocumentDoneResponse")]
        GIBProviders.ServiceLogo.eFaturaWebServiceResultType GetDocumentDone(string sessionID, string uuid, string[] paramList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/GetDocumentDone", ReplyAction="http://tempuri.org/IPostBoxService/GetDocumentDoneResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.eFaturaWebServiceResultType> GetDocumentDoneAsync(string sessionID, string uuid, string[] paramList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/GetDocumentStatus", ReplyAction="http://tempuri.org/IPostBoxService/GetDocumentStatusResponse")]
        GIBProviders.ServiceLogo.GetDocumentStatusResponse1 GetDocumentStatus1(GIBProviders.ServiceLogo.GetDocumentStatusRequest1 request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/GetDocumentStatus", ReplyAction="http://tempuri.org/IPostBoxService/GetDocumentStatusResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.GetDocumentStatusResponse1> GetDocumentStatus1Async(GIBProviders.ServiceLogo.GetDocumentStatusRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/GetDocumentData", ReplyAction="http://tempuri.org/IPostBoxService/GetDocumentDataResponse")]
        GIBProviders.ServiceLogo.GetDocumentDataResponse GetDocumentData1(GIBProviders.ServiceLogo.GetDocumentDataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/GetDocumentData", ReplyAction="http://tempuri.org/IPostBoxService/GetDocumentDataResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.GetDocumentDataResponse> GetDocumentData1Async(GIBProviders.ServiceLogo.GetDocumentDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/GetDocumentList", ReplyAction="http://tempuri.org/IPostBoxService/GetDocumentListResponse")]
        GIBProviders.ServiceLogo.GetDocumentListResponse GetDocumentList(GIBProviders.ServiceLogo.GetDocumentListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/GetDocumentList", ReplyAction="http://tempuri.org/IPostBoxService/GetDocumentListResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.GetDocumentListResponse> GetDocumentListAsync(GIBProviders.ServiceLogo.GetDocumentListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/GetValidateGIBUser", ReplyAction="http://tempuri.org/IPostBoxService/GetValidateGIBUserResponse")]
        GIBProviders.ServiceLogo.eFaturaWebServiceResultType GetValidateGIBUser(string sessionID, string[] paramList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostBoxService/GetValidateGIBUser", ReplyAction="http://tempuri.org/IPostBoxService/GetValidateGIBUserResponse")]
        System.Threading.Tasks.Task<GIBProviders.ServiceLogo.eFaturaWebServiceResultType> GetValidateGIBUserAsync(string sessionID, string[] paramList);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Login", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public GIBProviders.ServiceLogo.LoginType login;
        
        public LoginRequest() {
        }
        
        public LoginRequest(GIBProviders.ServiceLogo.LoginType login) {
            this.login = login;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool LoginResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sessionID;
        
        public LoginResponse() {
        }
        
        public LoginResponse(bool LoginResult, string sessionID) {
            this.LoginResult = LoginResult;
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receiveDocument", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class receiveDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sessionID;
        
        public receiveDocumentRequest() {
        }
        
        public receiveDocumentRequest(string sessionID) {
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receiveDocumentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class receiveDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool receiveDocumentResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public GIBProviders.ServiceLogo.DocumentType document;
        
        public receiveDocumentResponse() {
        }
        
        public receiveDocumentResponse(bool receiveDocumentResult, GIBProviders.ServiceLogo.DocumentType document) {
            this.receiveDocumentResult = receiveDocumentResult;
            this.document = document;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receiveInvoice", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class receiveInvoiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sessionID;
        
        public receiveInvoiceRequest() {
        }
        
        public receiveInvoiceRequest(string sessionID) {
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receiveInvoiceResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class receiveInvoiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool receiveInvoiceResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public GIBProviders.ServiceLogo.ElementType document;
        
        public receiveInvoiceResponse() {
        }
        
        public receiveInvoiceResponse(bool receiveInvoiceResult, GIBProviders.ServiceLogo.ElementType document) {
            this.receiveInvoiceResult = receiveInvoiceResult;
            this.document = document;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receiveApplicationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class receiveApplicationResponseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sessionID;
        
        public receiveApplicationResponseRequest() {
        }
        
        public receiveApplicationResponseRequest(string sessionID) {
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="receiveApplicationResponseResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class receiveApplicationResponseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool receiveApplicationResponseResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public GIBProviders.ServiceLogo.ElementType document;
        
        public receiveApplicationResponseResponse() {
        }
        
        public receiveApplicationResponseResponse(bool receiveApplicationResponseResult, GIBProviders.ServiceLogo.ElementType document) {
            this.receiveApplicationResponseResult = receiveApplicationResponseResult;
            this.document = document;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getApplicationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getApplicationResponseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string envelopeID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sessionID;
        
        public getApplicationResponseRequest() {
        }
        
        public getApplicationResponseRequest(string envelopeID, string sessionID) {
            this.envelopeID = envelopeID;
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getApplicationResponseResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getApplicationResponseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool getApplicationResponseResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public GIBProviders.ServiceLogo.DocumentType document;
        
        public getApplicationResponseResponse() {
        }
        
        public getApplicationResponseResponse(bool getApplicationResponseResult, GIBProviders.ServiceLogo.DocumentType document) {
            this.getApplicationResponseResult = getApplicationResponseResult;
            this.document = document;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getInvoiceStatus", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getInvoiceStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string uuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sessionID;
        
        public getInvoiceStatusRequest() {
        }
        
        public getInvoiceStatusRequest(string uuid, string sessionID) {
            this.uuid = uuid;
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getInvoiceStatusResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getInvoiceStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool getInvoiceStatusResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public GIBProviders.ServiceLogo.InvoiceStatus status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string statusDescription;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string envelopeId;
        
        public getInvoiceStatusResponse() {
        }
        
        public getInvoiceStatusResponse(bool getInvoiceStatusResult, GIBProviders.ServiceLogo.InvoiceStatus status, string statusDescription, string envelopeId) {
            this.getInvoiceStatusResult = getInvoiceStatusResult;
            this.status = status;
            this.statusDescription = statusDescription;
            this.envelopeId = envelopeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAppRespStatus", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getAppRespStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string uuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sessionID;
        
        public getAppRespStatusRequest() {
        }
        
        public getAppRespStatusRequest(string uuid, string sessionID) {
            this.uuid = uuid;
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAppRespStatusResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getAppRespStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool getAppRespStatusResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public GIBProviders.ServiceLogo.AppRespStatus status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string statusDescription;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string envelopeId;
        
        public getAppRespStatusResponse() {
        }
        
        public getAppRespStatusResponse(bool getAppRespStatusResult, GIBProviders.ServiceLogo.AppRespStatus status, string statusDescription, string envelopeId) {
            this.getAppRespStatusResult = getAppRespStatusResult;
            this.status = status;
            this.statusDescription = statusDescription;
            this.envelopeId = envelopeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getApprovalFlowList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getApprovalFlowListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sessionID;
        
        public getApprovalFlowListRequest() {
        }
        
        public getApprovalFlowListRequest(string sessionID) {
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getApprovalFlowListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getApprovalFlowListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool getApprovalFlowListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public GIBProviders.ServiceLogo.DocumentType document;
        
        public getApprovalFlowListResponse() {
        }
        
        public getApprovalFlowListResponse(bool getApprovalFlowListResult, GIBProviders.ServiceLogo.DocumentType document) {
            this.getApprovalFlowListResult = getApprovalFlowListResult;
            this.document = document;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getApprovalFlowRes", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getApprovalFlowResRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string invoiceUuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int flowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string sessionID;
        
        public getApprovalFlowResRequest() {
        }
        
        public getApprovalFlowResRequest(string invoiceUuid, int flowId, string sessionID) {
            this.invoiceUuid = invoiceUuid;
            this.flowId = flowId;
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getApprovalFlowResResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getApprovalFlowResResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool getApprovalFlowResResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int flowRes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int flowAction;
        
        public getApprovalFlowResResponse() {
        }
        
        public getApprovalFlowResResponse(bool getApprovalFlowResResult, int flowRes, int flowAction) {
            this.getApprovalFlowResResult = getApprovalFlowResResult;
            this.flowRes = flowRes;
            this.flowAction = flowAction;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDocumentStatus", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getDocumentStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int docType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string uuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int relRef;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string sessionID;
        
        public getDocumentStatusRequest() {
        }
        
        public getDocumentStatusRequest(int docType, string uuid, int relRef, string sessionID) {
            this.docType = docType;
            this.uuid = uuid;
            this.relRef = relRef;
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDocumentStatusResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getDocumentStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int respStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int responseCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string responseDesc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string envelopeId;
        
        public getDocumentStatusResponse() {
        }
        
        public getDocumentStatusResponse(int respStatus, int responseCode, string responseDesc, string envelopeId) {
            this.respStatus = respStatus;
            this.responseCode = responseCode;
            this.responseDesc = responseDesc;
            this.envelopeId = envelopeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDocumentStatusEx", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getDocumentStatusExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int docType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string uuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int relRef;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string sessionID;
        
        public getDocumentStatusExRequest() {
        }
        
        public getDocumentStatusExRequest(int docType, string uuid, int relRef, string sessionID) {
            this.docType = docType;
            this.uuid = uuid;
            this.relRef = relRef;
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDocumentStatusExResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getDocumentStatusExResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int respStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int responseCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string responseDesc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string envelopeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime currentDate;
        
        public getDocumentStatusExResponse() {
        }
        
        public getDocumentStatusExResponse(int respStatus, int responseCode, string responseDesc, string envelopeId, System.DateTime currentDate) {
            this.respStatus = respStatus;
            this.responseCode = responseCode;
            this.responseDesc = responseDesc;
            this.envelopeId = envelopeId;
            this.currentDate = currentDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEArchiveXslt", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getEArchiveXsltRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sessionID;
        
        public getEArchiveXsltRequest() {
        }
        
        public getEArchiveXsltRequest(string sessionID) {
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEArchiveXsltResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getEArchiveXsltResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool getEArchiveXsltResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public GIBProviders.ServiceLogo.DocumentType document;
        
        public getEArchiveXsltResponse() {
        }
        
        public getEArchiveXsltResponse(bool getEArchiveXsltResult, GIBProviders.ServiceLogo.DocumentType document) {
            this.getEArchiveXsltResult = getEArchiveXsltResult;
            this.document = document;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getInvoiceResponseData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getInvoiceResponseDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string uuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string responseType;
        
        public getInvoiceResponseDataRequest() {
        }
        
        public getInvoiceResponseDataRequest(string sessionID, string uuid, string responseType) {
            this.sessionID = sessionID;
            this.uuid = uuid;
            this.responseType = responseType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getInvoiceResponseDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getInvoiceResponseDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool getInvoiceResponseDataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public GIBProviders.ServiceLogo.DocumentType document;
        
        public getInvoiceResponseDataResponse() {
        }
        
        public getInvoiceResponseDataResponse(bool getInvoiceResponseDataResult, GIBProviders.ServiceLogo.DocumentType document) {
            this.getInvoiceResponseDataResult = getInvoiceResponseDataResult;
            this.document = document;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEArchiveInvoicePdfData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getEArchiveInvoicePdfDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string uuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool allInvoicesOrJustSigned;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool isCanceled;
        
        public getEArchiveInvoicePdfDataRequest() {
        }
        
        public getEArchiveInvoicePdfDataRequest(string sessionID, string uuid, bool allInvoicesOrJustSigned, bool isCanceled) {
            this.sessionID = sessionID;
            this.uuid = uuid;
            this.allInvoicesOrJustSigned = allInvoicesOrJustSigned;
            this.isCanceled = isCanceled;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEArchiveInvoicePdfDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getEArchiveInvoicePdfDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool getEArchiveInvoicePdfDataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public byte[] pdfData;
        
        public getEArchiveInvoicePdfDataResponse() {
        }
        
        public getEArchiveInvoicePdfDataResponse(bool getEArchiveInvoicePdfDataResult, byte[] pdfData) {
            this.getEArchiveInvoicePdfDataResult = getEArchiveInvoicePdfDataResult;
            this.pdfData = pdfData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendDocument", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] paramList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public GIBProviders.ServiceLogo.DocumentType document;
        
        public SendDocumentRequest() {
        }
        
        public SendDocumentRequest(string sessionID, string[] paramList, GIBProviders.ServiceLogo.DocumentType document) {
            this.sessionID = sessionID;
            this.paramList = paramList;
            this.document = document;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendDocumentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public GIBProviders.ServiceLogo.eFaturaWebServiceResultType SendDocumentResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int refId;
        
        public SendDocumentResponse() {
        }
        
        public SendDocumentResponse(GIBProviders.ServiceLogo.eFaturaWebServiceResultType SendDocumentResult, int refId) {
            this.SendDocumentResult = SendDocumentResult;
            this.refId = refId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDocument", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] paramList;
        
        public GetDocumentRequest() {
        }
        
        public GetDocumentRequest(string sessionID, string[] paramList) {
            this.sessionID = sessionID;
            this.paramList = paramList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDocumentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public GIBProviders.ServiceLogo.eFaturaWebServiceResultType GetDocumentResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public GIBProviders.ServiceLogo.ElementType document;
        
        public GetDocumentResponse() {
        }
        
        public GetDocumentResponse(GIBProviders.ServiceLogo.eFaturaWebServiceResultType GetDocumentResult, GIBProviders.ServiceLogo.ElementType document) {
            this.GetDocumentResult = GetDocumentResult;
            this.document = document;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDocumentStatus", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDocumentStatusRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string uuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] paramList;
        
        public GetDocumentStatusRequest1() {
        }
        
        public GetDocumentStatusRequest1(string sessionID, string uuid, string[] paramList) {
            this.sessionID = sessionID;
            this.uuid = uuid;
            this.paramList = paramList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDocumentStatusResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDocumentStatusResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public GIBProviders.ServiceLogo.eFaturaWebServiceResultType GetDocumentStatusResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public GIBProviders.ServiceLogo.DocumentStatusType statusInfo;
        
        public GetDocumentStatusResponse1() {
        }
        
        public GetDocumentStatusResponse1(GIBProviders.ServiceLogo.eFaturaWebServiceResultType GetDocumentStatusResult, GIBProviders.ServiceLogo.DocumentStatusType statusInfo) {
            this.GetDocumentStatusResult = GetDocumentStatusResult;
            this.statusInfo = statusInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDocumentData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDocumentDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string uuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] paramList;
        
        public GetDocumentDataRequest() {
        }
        
        public GetDocumentDataRequest(string sessionID, string uuid, string[] paramList) {
            this.sessionID = sessionID;
            this.uuid = uuid;
            this.paramList = paramList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDocumentDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDocumentDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public GIBProviders.ServiceLogo.eFaturaWebServiceResultType GetDocumentDataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public GIBProviders.ServiceLogo.DocumentType document;
        
        public GetDocumentDataResponse() {
        }
        
        public GetDocumentDataResponse(GIBProviders.ServiceLogo.eFaturaWebServiceResultType GetDocumentDataResult, GIBProviders.ServiceLogo.DocumentType document) {
            this.GetDocumentDataResult = GetDocumentDataResult;
            this.document = document;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDocumentList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDocumentListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] paramList;
        
        public GetDocumentListRequest() {
        }
        
        public GetDocumentListRequest(string sessionID, string[] paramList) {
            this.sessionID = sessionID;
            this.paramList = paramList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDocumentListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDocumentListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public GIBProviders.ServiceLogo.eFaturaWebServiceResultType GetDocumentListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public GIBProviders.ServiceLogo.Document[] docList;
        
        public GetDocumentListResponse() {
        }
        
        public GetDocumentListResponse(GIBProviders.ServiceLogo.eFaturaWebServiceResultType GetDocumentListResult, GIBProviders.ServiceLogo.Document[] docList) {
            this.GetDocumentListResult = GetDocumentListResult;
            this.docList = docList;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPostBoxServiceChannel : GIBProviders.ServiceLogo.IPostBoxService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostBoxServiceClient : System.ServiceModel.ClientBase<GIBProviders.ServiceLogo.IPostBoxService>, GIBProviders.ServiceLogo.IPostBoxService {
        
        public PostBoxServiceClient() {
        }
        
        public PostBoxServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PostBoxServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PostBoxServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PostBoxServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<string> PingAsync() {
            return base.Channel.PingAsync();
        }
        
        public string ALive(string key) {
            return base.Channel.ALive(key);
        }
        
        public System.Threading.Tasks.Task<string> ALiveAsync(string key) {
            return base.Channel.ALiveAsync(key);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.LoginResponse GIBProviders.ServiceLogo.IPostBoxService.Login(GIBProviders.ServiceLogo.LoginRequest request) {
            return base.Channel.Login(request);
        }
        
        public bool Login(GIBProviders.ServiceLogo.LoginType login1, out string sessionID) {
            GIBProviders.ServiceLogo.LoginRequest inValue = new GIBProviders.ServiceLogo.LoginRequest();
            inValue.login = login1;
            GIBProviders.ServiceLogo.LoginResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).Login(inValue);
            sessionID = retVal.sessionID;
            return retVal.LoginResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.LoginResponse> LoginAsync(GIBProviders.ServiceLogo.LoginRequest request) {
            return base.Channel.LoginAsync(request);
        }
        
        public void Logout(string sessionID) {
            base.Channel.Logout(sessionID);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(string sessionID) {
            return base.Channel.LogoutAsync(sessionID);
        }
        
        public bool sendEnvelope(GIBProviders.ServiceLogo.DocumentType envelope, string sessionID) {
            return base.Channel.sendEnvelope(envelope, sessionID);
        }
        
        public System.Threading.Tasks.Task<bool> sendEnvelopeAsync(GIBProviders.ServiceLogo.DocumentType envelope, string sessionID) {
            return base.Channel.sendEnvelopeAsync(envelope, sessionID);
        }
        
        public bool sendInvoice(GIBProviders.ServiceLogo.DocumentType invoice, string alias, string sessionID) {
            return base.Channel.sendInvoice(invoice, alias, sessionID);
        }
        
        public System.Threading.Tasks.Task<bool> sendInvoiceAsync(GIBProviders.ServiceLogo.DocumentType invoice, string alias, string sessionID) {
            return base.Channel.sendInvoiceAsync(invoice, alias, sessionID);
        }
        
        public bool sendApplicationResponse(GIBProviders.ServiceLogo.DocumentType appResp, string alias, string sessionID) {
            return base.Channel.sendApplicationResponse(appResp, alias, sessionID);
        }
        
        public System.Threading.Tasks.Task<bool> sendApplicationResponseAsync(GIBProviders.ServiceLogo.DocumentType appResp, string alias, string sessionID) {
            return base.Channel.sendApplicationResponseAsync(appResp, alias, sessionID);
        }
        
        public int sendEnvelopeEx(GIBProviders.ServiceLogo.DocumentType envelope, string sessionID) {
            return base.Channel.sendEnvelopeEx(envelope, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> sendEnvelopeExAsync(GIBProviders.ServiceLogo.DocumentType envelope, string sessionID) {
            return base.Channel.sendEnvelopeExAsync(envelope, sessionID);
        }
        
        public int sendInvoiceEx(GIBProviders.ServiceLogo.DocumentType invoice, string alias, string sessionID) {
            return base.Channel.sendInvoiceEx(invoice, alias, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> sendInvoiceExAsync(GIBProviders.ServiceLogo.DocumentType invoice, string alias, string sessionID) {
            return base.Channel.sendInvoiceExAsync(invoice, alias, sessionID);
        }
        
        public int sendSignedInvoice(GIBProviders.ServiceLogo.DocumentType invoice, string alias, string sessionID) {
            return base.Channel.sendSignedInvoice(invoice, alias, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> sendSignedInvoiceAsync(GIBProviders.ServiceLogo.DocumentType invoice, string alias, string sessionID) {
            return base.Channel.sendSignedInvoiceAsync(invoice, alias, sessionID);
        }
        
        public int sendApplicationResponseEx(GIBProviders.ServiceLogo.DocumentType appResp, string alias, string sessionID) {
            return base.Channel.sendApplicationResponseEx(appResp, alias, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> sendApplicationResponseExAsync(GIBProviders.ServiceLogo.DocumentType appResp, string alias, string sessionID) {
            return base.Channel.sendApplicationResponseExAsync(appResp, alias, sessionID);
        }
        
        public int sendEArchiveDocument(GIBProviders.ServiceLogo.DocumentType document, GIBProviders.ServiceLogo.EArchiveDocumentTypes docType, bool isSigned, string sessionID, string xsltUuid) {
            return base.Channel.sendEArchiveDocument(document, docType, isSigned, sessionID, xsltUuid);
        }
        
        public System.Threading.Tasks.Task<int> sendEArchiveDocumentAsync(GIBProviders.ServiceLogo.DocumentType document, GIBProviders.ServiceLogo.EArchiveDocumentTypes docType, bool isSigned, string sessionID, string xsltUuid) {
            return base.Channel.sendEArchiveDocumentAsync(document, docType, isSigned, sessionID, xsltUuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.receiveDocumentResponse GIBProviders.ServiceLogo.IPostBoxService.receiveDocument(GIBProviders.ServiceLogo.receiveDocumentRequest request) {
            return base.Channel.receiveDocument(request);
        }
        
        public bool receiveDocument(string sessionID, out GIBProviders.ServiceLogo.DocumentType document) {
            GIBProviders.ServiceLogo.receiveDocumentRequest inValue = new GIBProviders.ServiceLogo.receiveDocumentRequest();
            inValue.sessionID = sessionID;
            GIBProviders.ServiceLogo.receiveDocumentResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).receiveDocument(inValue);
            document = retVal.document;
            return retVal.receiveDocumentResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.receiveDocumentResponse> receiveDocumentAsync(GIBProviders.ServiceLogo.receiveDocumentRequest request) {
            return base.Channel.receiveDocumentAsync(request);
        }
        
        public int receiveDone(string fileID, string sessionID) {
            return base.Channel.receiveDone(fileID, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> receiveDoneAsync(string fileID, string sessionID) {
            return base.Channel.receiveDoneAsync(fileID, sessionID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.receiveInvoiceResponse GIBProviders.ServiceLogo.IPostBoxService.receiveInvoice(GIBProviders.ServiceLogo.receiveInvoiceRequest request) {
            return base.Channel.receiveInvoice(request);
        }
        
        public bool receiveInvoice(string sessionID, out GIBProviders.ServiceLogo.ElementType document) {
            GIBProviders.ServiceLogo.receiveInvoiceRequest inValue = new GIBProviders.ServiceLogo.receiveInvoiceRequest();
            inValue.sessionID = sessionID;
            GIBProviders.ServiceLogo.receiveInvoiceResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).receiveInvoice(inValue);
            document = retVal.document;
            return retVal.receiveInvoiceResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.receiveInvoiceResponse> receiveInvoiceAsync(GIBProviders.ServiceLogo.receiveInvoiceRequest request) {
            return base.Channel.receiveInvoiceAsync(request);
        }
        
        public int receiveInvoiceDone(string uuid, string sessionID) {
            return base.Channel.receiveInvoiceDone(uuid, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> receiveInvoiceDoneAsync(string uuid, string sessionID) {
            return base.Channel.receiveInvoiceDoneAsync(uuid, sessionID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.receiveApplicationResponseResponse GIBProviders.ServiceLogo.IPostBoxService.receiveApplicationResponse(GIBProviders.ServiceLogo.receiveApplicationResponseRequest request) {
            return base.Channel.receiveApplicationResponse(request);
        }
        
        public bool receiveApplicationResponse(string sessionID, out GIBProviders.ServiceLogo.ElementType document) {
            GIBProviders.ServiceLogo.receiveApplicationResponseRequest inValue = new GIBProviders.ServiceLogo.receiveApplicationResponseRequest();
            inValue.sessionID = sessionID;
            GIBProviders.ServiceLogo.receiveApplicationResponseResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).receiveApplicationResponse(inValue);
            document = retVal.document;
            return retVal.receiveApplicationResponseResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.receiveApplicationResponseResponse> receiveApplicationResponseAsync(GIBProviders.ServiceLogo.receiveApplicationResponseRequest request) {
            return base.Channel.receiveApplicationResponseAsync(request);
        }
        
        public int receiveApplicationResponseDone(string uuid, string sessionID) {
            return base.Channel.receiveApplicationResponseDone(uuid, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> receiveApplicationResponseDoneAsync(string uuid, string sessionID) {
            return base.Channel.receiveApplicationResponseDoneAsync(uuid, sessionID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.getApplicationResponseResponse GIBProviders.ServiceLogo.IPostBoxService.getApplicationResponse(GIBProviders.ServiceLogo.getApplicationResponseRequest request) {
            return base.Channel.getApplicationResponse(request);
        }
        
        public bool getApplicationResponse(string envelopeID, string sessionID, out GIBProviders.ServiceLogo.DocumentType document) {
            GIBProviders.ServiceLogo.getApplicationResponseRequest inValue = new GIBProviders.ServiceLogo.getApplicationResponseRequest();
            inValue.envelopeID = envelopeID;
            inValue.sessionID = sessionID;
            GIBProviders.ServiceLogo.getApplicationResponseResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).getApplicationResponse(inValue);
            document = retVal.document;
            return retVal.getApplicationResponseResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getApplicationResponseResponse> getApplicationResponseAsync(GIBProviders.ServiceLogo.getApplicationResponseRequest request) {
            return base.Channel.getApplicationResponseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.getInvoiceStatusResponse GIBProviders.ServiceLogo.IPostBoxService.getInvoiceStatus(GIBProviders.ServiceLogo.getInvoiceStatusRequest request) {
            return base.Channel.getInvoiceStatus(request);
        }
        
        public bool getInvoiceStatus(string uuid, string sessionID, out GIBProviders.ServiceLogo.InvoiceStatus status, out string statusDescription, out string envelopeId) {
            GIBProviders.ServiceLogo.getInvoiceStatusRequest inValue = new GIBProviders.ServiceLogo.getInvoiceStatusRequest();
            inValue.uuid = uuid;
            inValue.sessionID = sessionID;
            GIBProviders.ServiceLogo.getInvoiceStatusResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).getInvoiceStatus(inValue);
            status = retVal.status;
            statusDescription = retVal.statusDescription;
            envelopeId = retVal.envelopeId;
            return retVal.getInvoiceStatusResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getInvoiceStatusResponse> getInvoiceStatusAsync(GIBProviders.ServiceLogo.getInvoiceStatusRequest request) {
            return base.Channel.getInvoiceStatusAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.getAppRespStatusResponse GIBProviders.ServiceLogo.IPostBoxService.getAppRespStatus(GIBProviders.ServiceLogo.getAppRespStatusRequest request) {
            return base.Channel.getAppRespStatus(request);
        }
        
        public bool getAppRespStatus(string uuid, string sessionID, out GIBProviders.ServiceLogo.AppRespStatus status, out string statusDescription, out string envelopeId) {
            GIBProviders.ServiceLogo.getAppRespStatusRequest inValue = new GIBProviders.ServiceLogo.getAppRespStatusRequest();
            inValue.uuid = uuid;
            inValue.sessionID = sessionID;
            GIBProviders.ServiceLogo.getAppRespStatusResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).getAppRespStatus(inValue);
            status = retVal.status;
            statusDescription = retVal.statusDescription;
            envelopeId = retVal.envelopeId;
            return retVal.getAppRespStatusResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getAppRespStatusResponse> getAppRespStatusAsync(GIBProviders.ServiceLogo.getAppRespStatusRequest request) {
            return base.Channel.getAppRespStatusAsync(request);
        }
        
        public string[] getEnvelopeList(System.DateTime beginDate, System.DateTime endDate, GIBProviders.ServiceLogo.SendRecvType opType, string sessionID, GIBProviders.ServiceLogo.PostBoxDateType dateBy) {
            return base.Channel.getEnvelopeList(beginDate, endDate, opType, sessionID, dateBy);
        }
        
        public System.Threading.Tasks.Task<string[]> getEnvelopeListAsync(System.DateTime beginDate, System.DateTime endDate, GIBProviders.ServiceLogo.SendRecvType opType, string sessionID, GIBProviders.ServiceLogo.PostBoxDateType dateBy) {
            return base.Channel.getEnvelopeListAsync(beginDate, endDate, opType, sessionID, dateBy);
        }
        
        public GIBProviders.ServiceLogo.DocumentType getEnvelope(string envelopeID, string sessionID) {
            return base.Channel.getEnvelope(envelopeID, sessionID);
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.DocumentType> getEnvelopeAsync(string envelopeID, string sessionID) {
            return base.Channel.getEnvelopeAsync(envelopeID, sessionID);
        }
        
        public string[] getInvoiceList(System.DateTime beginDate, System.DateTime endDate, GIBProviders.ServiceLogo.SendRecvType opType, string sessionID, GIBProviders.ServiceLogo.InvoiceDateType dateBy) {
            return base.Channel.getInvoiceList(beginDate, endDate, opType, sessionID, dateBy);
        }
        
        public System.Threading.Tasks.Task<string[]> getInvoiceListAsync(System.DateTime beginDate, System.DateTime endDate, GIBProviders.ServiceLogo.SendRecvType opType, string sessionID, GIBProviders.ServiceLogo.InvoiceDateType dateBy) {
            return base.Channel.getInvoiceListAsync(beginDate, endDate, opType, sessionID, dateBy);
        }
        
        public GIBProviders.ServiceLogo.DocumentType getInvoice(string invoiceID, string sessionID) {
            return base.Channel.getInvoice(invoiceID, sessionID);
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.DocumentType> getInvoiceAsync(string invoiceID, string sessionID) {
            return base.Channel.getInvoiceAsync(invoiceID, sessionID);
        }
        
        public GIBProviders.ServiceLogo.DocumentType getUserList(GIBProviders.ServiceLogo.LoginType login, GIBProviders.ServiceLogo.UserListType listType) {
            return base.Channel.getUserList(login, listType);
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.DocumentType> getUserListAsync(GIBProviders.ServiceLogo.LoginType login, GIBProviders.ServiceLogo.UserListType listType) {
            return base.Channel.getUserListAsync(login, listType);
        }
        
        public GIBProviders.ServiceLogo.DocumentType getUserListNew(GIBProviders.ServiceLogo.LoginType login, GIBProviders.ServiceLogo.UserListType listType) {
            return base.Channel.getUserListNew(login, listType);
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.DocumentType> getUserListNewAsync(GIBProviders.ServiceLogo.LoginType login, GIBProviders.ServiceLogo.UserListType listType) {
            return base.Channel.getUserListNewAsync(login, listType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.getApprovalFlowListResponse GIBProviders.ServiceLogo.IPostBoxService.getApprovalFlowList(GIBProviders.ServiceLogo.getApprovalFlowListRequest request) {
            return base.Channel.getApprovalFlowList(request);
        }
        
        public bool getApprovalFlowList(string sessionID, out GIBProviders.ServiceLogo.DocumentType document) {
            GIBProviders.ServiceLogo.getApprovalFlowListRequest inValue = new GIBProviders.ServiceLogo.getApprovalFlowListRequest();
            inValue.sessionID = sessionID;
            GIBProviders.ServiceLogo.getApprovalFlowListResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).getApprovalFlowList(inValue);
            document = retVal.document;
            return retVal.getApprovalFlowListResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getApprovalFlowListResponse> getApprovalFlowListAsync(GIBProviders.ServiceLogo.getApprovalFlowListRequest request) {
            return base.Channel.getApprovalFlowListAsync(request);
        }
        
        public bool setApprovalFlowId(string invoiceUuid, int flowId, string sessionID) {
            return base.Channel.setApprovalFlowId(invoiceUuid, flowId, sessionID);
        }
        
        public System.Threading.Tasks.Task<bool> setApprovalFlowIdAsync(string invoiceUuid, int flowId, string sessionID) {
            return base.Channel.setApprovalFlowIdAsync(invoiceUuid, flowId, sessionID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.getApprovalFlowResResponse GIBProviders.ServiceLogo.IPostBoxService.getApprovalFlowRes(GIBProviders.ServiceLogo.getApprovalFlowResRequest request) {
            return base.Channel.getApprovalFlowRes(request);
        }
        
        public bool getApprovalFlowRes(string invoiceUuid, int flowId, string sessionID, out int flowRes, out int flowAction) {
            GIBProviders.ServiceLogo.getApprovalFlowResRequest inValue = new GIBProviders.ServiceLogo.getApprovalFlowResRequest();
            inValue.invoiceUuid = invoiceUuid;
            inValue.flowId = flowId;
            inValue.sessionID = sessionID;
            GIBProviders.ServiceLogo.getApprovalFlowResResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).getApprovalFlowRes(inValue);
            flowRes = retVal.flowRes;
            flowAction = retVal.flowAction;
            return retVal.getApprovalFlowResResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getApprovalFlowResResponse> getApprovalFlowResAsync(GIBProviders.ServiceLogo.getApprovalFlowResRequest request) {
            return base.Channel.getApprovalFlowResAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.getDocumentStatusResponse GIBProviders.ServiceLogo.IPostBoxService.getDocumentStatus(GIBProviders.ServiceLogo.getDocumentStatusRequest request) {
            return base.Channel.getDocumentStatus(request);
        }
        
        public int getDocumentStatus(int docType, string uuid, int relRef, string sessionID, out int responseCode, out string responseDesc, out string envelopeId) {
            GIBProviders.ServiceLogo.getDocumentStatusRequest inValue = new GIBProviders.ServiceLogo.getDocumentStatusRequest();
            inValue.docType = docType;
            inValue.uuid = uuid;
            inValue.relRef = relRef;
            inValue.sessionID = sessionID;
            GIBProviders.ServiceLogo.getDocumentStatusResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).getDocumentStatus(inValue);
            responseCode = retVal.responseCode;
            responseDesc = retVal.responseDesc;
            envelopeId = retVal.envelopeId;
            return retVal.respStatus;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getDocumentStatusResponse> getDocumentStatusAsync(GIBProviders.ServiceLogo.getDocumentStatusRequest request) {
            return base.Channel.getDocumentStatusAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.getDocumentStatusExResponse GIBProviders.ServiceLogo.IPostBoxService.getDocumentStatusEx(GIBProviders.ServiceLogo.getDocumentStatusExRequest request) {
            return base.Channel.getDocumentStatusEx(request);
        }
        
        public int getDocumentStatusEx(int docType, string uuid, int relRef, string sessionID, out int responseCode, out string responseDesc, out string envelopeId, out System.DateTime currentDate) {
            GIBProviders.ServiceLogo.getDocumentStatusExRequest inValue = new GIBProviders.ServiceLogo.getDocumentStatusExRequest();
            inValue.docType = docType;
            inValue.uuid = uuid;
            inValue.relRef = relRef;
            inValue.sessionID = sessionID;
            GIBProviders.ServiceLogo.getDocumentStatusExResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).getDocumentStatusEx(inValue);
            responseCode = retVal.responseCode;
            responseDesc = retVal.responseDesc;
            envelopeId = retVal.envelopeId;
            currentDate = retVal.currentDate;
            return retVal.respStatus;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getDocumentStatusExResponse> getDocumentStatusExAsync(GIBProviders.ServiceLogo.getDocumentStatusExRequest request) {
            return base.Channel.getDocumentStatusExAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.getEArchiveXsltResponse GIBProviders.ServiceLogo.IPostBoxService.getEArchiveXslt(GIBProviders.ServiceLogo.getEArchiveXsltRequest request) {
            return base.Channel.getEArchiveXslt(request);
        }
        
        public bool getEArchiveXslt(string sessionID, out GIBProviders.ServiceLogo.DocumentType document) {
            GIBProviders.ServiceLogo.getEArchiveXsltRequest inValue = new GIBProviders.ServiceLogo.getEArchiveXsltRequest();
            inValue.sessionID = sessionID;
            GIBProviders.ServiceLogo.getEArchiveXsltResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).getEArchiveXslt(inValue);
            document = retVal.document;
            return retVal.getEArchiveXsltResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getEArchiveXsltResponse> getEArchiveXsltAsync(GIBProviders.ServiceLogo.getEArchiveXsltRequest request) {
            return base.Channel.getEArchiveXsltAsync(request);
        }
        
        public int getInvoiceApplicationResponse(string sessionID, string uuid) {
            return base.Channel.getInvoiceApplicationResponse(sessionID, uuid);
        }
        
        public System.Threading.Tasks.Task<int> getInvoiceApplicationResponseAsync(string sessionID, string uuid) {
            return base.Channel.getInvoiceApplicationResponseAsync(sessionID, uuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.getInvoiceResponseDataResponse GIBProviders.ServiceLogo.IPostBoxService.getInvoiceResponseData(GIBProviders.ServiceLogo.getInvoiceResponseDataRequest request) {
            return base.Channel.getInvoiceResponseData(request);
        }
        
        public bool getInvoiceResponseData(string sessionID, string uuid, string responseType, out GIBProviders.ServiceLogo.DocumentType document) {
            GIBProviders.ServiceLogo.getInvoiceResponseDataRequest inValue = new GIBProviders.ServiceLogo.getInvoiceResponseDataRequest();
            inValue.sessionID = sessionID;
            inValue.uuid = uuid;
            inValue.responseType = responseType;
            GIBProviders.ServiceLogo.getInvoiceResponseDataResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).getInvoiceResponseData(inValue);
            document = retVal.document;
            return retVal.getInvoiceResponseDataResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getInvoiceResponseDataResponse> getInvoiceResponseDataAsync(GIBProviders.ServiceLogo.getInvoiceResponseDataRequest request) {
            return base.Channel.getInvoiceResponseDataAsync(request);
        }
        
        public bool setApplicationResponseOption(string sessionID, int option) {
            return base.Channel.setApplicationResponseOption(sessionID, option);
        }
        
        public System.Threading.Tasks.Task<bool> setApplicationResponseOptionAsync(string sessionID, int option) {
            return base.Channel.setApplicationResponseOptionAsync(sessionID, option);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.getEArchiveInvoicePdfDataResponse GIBProviders.ServiceLogo.IPostBoxService.getEArchiveInvoicePdfData(GIBProviders.ServiceLogo.getEArchiveInvoicePdfDataRequest request) {
            return base.Channel.getEArchiveInvoicePdfData(request);
        }
        
        public bool getEArchiveInvoicePdfData(string sessionID, string uuid, bool allInvoicesOrJustSigned, bool isCanceled, out byte[] pdfData) {
            GIBProviders.ServiceLogo.getEArchiveInvoicePdfDataRequest inValue = new GIBProviders.ServiceLogo.getEArchiveInvoicePdfDataRequest();
            inValue.sessionID = sessionID;
            inValue.uuid = uuid;
            inValue.allInvoicesOrJustSigned = allInvoicesOrJustSigned;
            inValue.isCanceled = isCanceled;
            GIBProviders.ServiceLogo.getEArchiveInvoicePdfDataResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).getEArchiveInvoicePdfData(inValue);
            pdfData = retVal.pdfData;
            return retVal.getEArchiveInvoicePdfDataResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.getEArchiveInvoicePdfDataResponse> getEArchiveInvoicePdfDataAsync(GIBProviders.ServiceLogo.getEArchiveInvoicePdfDataRequest request) {
            return base.Channel.getEArchiveInvoicePdfDataAsync(request);
        }
        
        public GIBProviders.ServiceLogo.DocumentType getDocumentData(string sessionID, string uuid, GIBProviders.ServiceLogo.GetDocumentType docType, GIBProviders.ServiceLogo.DocumentDataType dataType) {
            return base.Channel.getDocumentData(sessionID, uuid, docType, dataType);
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.DocumentType> getDocumentDataAsync(string sessionID, string uuid, GIBProviders.ServiceLogo.GetDocumentType docType, GIBProviders.ServiceLogo.DocumentDataType dataType) {
            return base.Channel.getDocumentDataAsync(sessionID, uuid, docType, dataType);
        }
        
        public GIBProviders.ServiceLogo.DocumentType getReconciliationList(string sessionID, System.DateTime begDate, System.DateTime endDate, string begNum, string endNum, GIBProviders.ServiceLogo.SendRecvType opType, int docType) {
            return base.Channel.getReconciliationList(sessionID, begDate, endDate, begNum, endNum, opType, docType);
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.DocumentType> getReconciliationListAsync(string sessionID, System.DateTime begDate, System.DateTime endDate, string begNum, string endNum, GIBProviders.ServiceLogo.SendRecvType opType, int docType) {
            return base.Channel.getReconciliationListAsync(sessionID, begDate, endDate, begNum, endNum, opType, docType);
        }
        
        public int sendReconciliationReport(GIBProviders.ServiceLogo.DocumentType report, string sessionID) {
            return base.Channel.sendReconciliationReport(report, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> sendReconciliationReportAsync(GIBProviders.ServiceLogo.DocumentType report, string sessionID) {
            return base.Channel.sendReconciliationReportAsync(report, sessionID);
        }
        
        public string createElementId(string sessionID, string year, string invoicePrefix, GIBProviders.ServiceLogo.GetDocumentType docType) {
            return base.Channel.createElementId(sessionID, year, invoicePrefix, docType);
        }
        
        public System.Threading.Tasks.Task<string> createElementIdAsync(string sessionID, string year, string invoicePrefix, GIBProviders.ServiceLogo.GetDocumentType docType) {
            return base.Channel.createElementIdAsync(sessionID, year, invoicePrefix, docType);
        }
        
        public int cancelEArchiveInvoice(string sessionID, string uuid, string elementId) {
            return base.Channel.cancelEArchiveInvoice(sessionID, uuid, elementId);
        }
        
        public System.Threading.Tasks.Task<int> cancelEArchiveInvoiceAsync(string sessionID, string uuid, string elementId) {
            return base.Channel.cancelEArchiveInvoiceAsync(sessionID, uuid, elementId);
        }
        
        public int SendEArchiveListForReconcilition(System.DateTime beginDate, System.DateTime endDate, string sessionID, GIBProviders.ServiceLogo.ReconInvoiceType[] invoiceList, GIBProviders.ServiceLogo.InvoiceType invoiceType) {
            return base.Channel.SendEArchiveListForReconcilition(beginDate, endDate, sessionID, invoiceList, invoiceType);
        }
        
        public System.Threading.Tasks.Task<int> SendEArchiveListForReconcilitionAsync(System.DateTime beginDate, System.DateTime endDate, string sessionID, GIBProviders.ServiceLogo.ReconInvoiceType[] invoiceList, GIBProviders.ServiceLogo.InvoiceType invoiceType) {
            return base.Channel.SendEArchiveListForReconcilitionAsync(beginDate, endDate, sessionID, invoiceList, invoiceType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.SendDocumentResponse GIBProviders.ServiceLogo.IPostBoxService.SendDocument(GIBProviders.ServiceLogo.SendDocumentRequest request) {
            return base.Channel.SendDocument(request);
        }
        
        public GIBProviders.ServiceLogo.eFaturaWebServiceResultType SendDocument(string sessionID, string[] paramList, GIBProviders.ServiceLogo.DocumentType document, out int refId) {
            GIBProviders.ServiceLogo.SendDocumentRequest inValue = new GIBProviders.ServiceLogo.SendDocumentRequest();
            inValue.sessionID = sessionID;
            inValue.paramList = paramList;
            inValue.document = document;
            GIBProviders.ServiceLogo.SendDocumentResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).SendDocument(inValue);
            refId = retVal.refId;
            return retVal.SendDocumentResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.SendDocumentResponse> SendDocumentAsync(GIBProviders.ServiceLogo.SendDocumentRequest request) {
            return base.Channel.SendDocumentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.GetDocumentResponse GIBProviders.ServiceLogo.IPostBoxService.GetDocument(GIBProviders.ServiceLogo.GetDocumentRequest request) {
            return base.Channel.GetDocument(request);
        }
        
        public GIBProviders.ServiceLogo.eFaturaWebServiceResultType GetDocument(string sessionID, string[] paramList, out GIBProviders.ServiceLogo.ElementType document) {
            GIBProviders.ServiceLogo.GetDocumentRequest inValue = new GIBProviders.ServiceLogo.GetDocumentRequest();
            inValue.sessionID = sessionID;
            inValue.paramList = paramList;
            GIBProviders.ServiceLogo.GetDocumentResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).GetDocument(inValue);
            document = retVal.document;
            return retVal.GetDocumentResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.GetDocumentResponse> GetDocumentAsync(GIBProviders.ServiceLogo.GetDocumentRequest request) {
            return base.Channel.GetDocumentAsync(request);
        }
        
        public GIBProviders.ServiceLogo.eFaturaWebServiceResultType GetDocumentDone(string sessionID, string uuid, string[] paramList) {
            return base.Channel.GetDocumentDone(sessionID, uuid, paramList);
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.eFaturaWebServiceResultType> GetDocumentDoneAsync(string sessionID, string uuid, string[] paramList) {
            return base.Channel.GetDocumentDoneAsync(sessionID, uuid, paramList);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.GetDocumentStatusResponse1 GIBProviders.ServiceLogo.IPostBoxService.GetDocumentStatus1(GIBProviders.ServiceLogo.GetDocumentStatusRequest1 request) {
            return base.Channel.GetDocumentStatus1(request);
        }
        
        public GIBProviders.ServiceLogo.eFaturaWebServiceResultType GetDocumentStatus1(string sessionID, string uuid, string[] paramList, out GIBProviders.ServiceLogo.DocumentStatusType statusInfo) {
            GIBProviders.ServiceLogo.GetDocumentStatusRequest1 inValue = new GIBProviders.ServiceLogo.GetDocumentStatusRequest1();
            inValue.sessionID = sessionID;
            inValue.uuid = uuid;
            inValue.paramList = paramList;
            GIBProviders.ServiceLogo.GetDocumentStatusResponse1 retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).GetDocumentStatus1(inValue);
            statusInfo = retVal.statusInfo;
            return retVal.GetDocumentStatusResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.GetDocumentStatusResponse1> GetDocumentStatus1Async(GIBProviders.ServiceLogo.GetDocumentStatusRequest1 request) {
            return base.Channel.GetDocumentStatus1Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.GetDocumentDataResponse GIBProviders.ServiceLogo.IPostBoxService.GetDocumentData1(GIBProviders.ServiceLogo.GetDocumentDataRequest request) {
            return base.Channel.GetDocumentData1(request);
        }
        
        public GIBProviders.ServiceLogo.eFaturaWebServiceResultType GetDocumentData1(string sessionID, string uuid, string[] paramList, out GIBProviders.ServiceLogo.DocumentType document) {
            GIBProviders.ServiceLogo.GetDocumentDataRequest inValue = new GIBProviders.ServiceLogo.GetDocumentDataRequest();
            inValue.sessionID = sessionID;
            inValue.uuid = uuid;
            inValue.paramList = paramList;
            GIBProviders.ServiceLogo.GetDocumentDataResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).GetDocumentData1(inValue);
            document = retVal.document;
            return retVal.GetDocumentDataResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.GetDocumentDataResponse> GetDocumentData1Async(GIBProviders.ServiceLogo.GetDocumentDataRequest request) {
            return base.Channel.GetDocumentData1Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GIBProviders.ServiceLogo.GetDocumentListResponse GIBProviders.ServiceLogo.IPostBoxService.GetDocumentList(GIBProviders.ServiceLogo.GetDocumentListRequest request) {
            return base.Channel.GetDocumentList(request);
        }
        
        public GIBProviders.ServiceLogo.eFaturaWebServiceResultType GetDocumentList(string sessionID, string[] paramList, out GIBProviders.ServiceLogo.Document[] docList) {
            GIBProviders.ServiceLogo.GetDocumentListRequest inValue = new GIBProviders.ServiceLogo.GetDocumentListRequest();
            inValue.sessionID = sessionID;
            inValue.paramList = paramList;
            GIBProviders.ServiceLogo.GetDocumentListResponse retVal = ((GIBProviders.ServiceLogo.IPostBoxService)(this)).GetDocumentList(inValue);
            docList = retVal.docList;
            return retVal.GetDocumentListResult;
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.GetDocumentListResponse> GetDocumentListAsync(GIBProviders.ServiceLogo.GetDocumentListRequest request) {
            return base.Channel.GetDocumentListAsync(request);
        }
        
        public GIBProviders.ServiceLogo.eFaturaWebServiceResultType GetValidateGIBUser(string sessionID, string[] paramList) {
            return base.Channel.GetValidateGIBUser(sessionID, paramList);
        }
        
        public System.Threading.Tasks.Task<GIBProviders.ServiceLogo.eFaturaWebServiceResultType> GetValidateGIBUserAsync(string sessionID, string[] paramList) {
            return base.Channel.GetValidateGIBUserAsync(sessionID, paramList);
        }
    }
}
